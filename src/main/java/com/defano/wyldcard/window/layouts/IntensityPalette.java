package com.defano.wyldcard.window.layouts;

import com.defano.wyldcard.WyldCard;
import com.defano.wyldcard.aspect.RunOnDispatch;
import com.defano.wyldcard.window.WyldCardDialog;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class IntensityPalette extends WyldCardDialog<Object> {

    private final static IntensityPalette instance = new IntensityPalette();

    private JSlider intensitySlider;
    private JPanel intensityPanel;
    private JCheckBox smooth;

    private IntensityPalette() {
        intensitySlider.setValue((int) (WyldCard.getInstance().getToolsManager().getIntensity() * 100.0));
        intensitySlider.addChangeListener(e -> WyldCard.getInstance().getToolsManager().setIntensity(intensitySlider.getValue() / 100.0));

        smooth.setSelected(WyldCard.getInstance().getToolsManager().getPathInterpolation());
        smooth.addChangeListener(e -> WyldCard.getInstance().getToolsManager().setPathInterpolation(smooth.isSelected()));
    }

    public static IntensityPalette getInstance() {
        return instance;
    }

    @Override
    public JComponent getWindowPanel() {
        return intensityPanel;
    }

    @Override
    @RunOnDispatch
    public void bindModel(Object data) {
        // Nothing to do
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        intensityPanel = new JPanel();
        intensityPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        intensitySlider = new JSlider();
        intensitySlider.setInverted(false);
        intensitySlider.setMajorTickSpacing(5);
        intensitySlider.setMaximum(30);
        intensitySlider.setMinimum(0);
        intensitySlider.setMinorTickSpacing(0);
        intensitySlider.setPaintLabels(false);
        intensitySlider.setPaintTicks(true);
        intensitySlider.setValueIsAdjusting(false);
        intensityPanel.add(intensitySlider, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        intensityPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        smooth = new JCheckBox();
        smooth.setText("Smooth spray");
        intensityPanel.add(smooth, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        intensityPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return intensityPanel;
    }

}
